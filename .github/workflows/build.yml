name: Build APK with Buildozer

on:
  push:
    branches:
      - '**'  # Runs on all branches
  pull_request:
    branches:
      - '**'  # Runs on all PRs targeting any branch
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y ffmpeg libsm6 libxext6
          python -m pip install --upgrade pip
          pip install cython virtualenv

      - name: Install Buildozer
        run: |
          pip install buildozer

      - name: Install Android SDK and Dependencies
        run: |
          sudo apt update
          sudo apt install -y openjdk-11-jdk unzip
          export ANDROID_HOME=$HOME/android-sdk
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH
          mkdir -p $ANDROID_HOME/cmdline-tools/latest
          curl -o sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip
          unzip sdk-tools.zip -d $ANDROID_HOME/cmdline-tools/latest
          rm sdk-tools.zip
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-31" "build-tools;31.0.0"
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          echo "PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH" >> $GITHUB_ENV

      - name: Build APK
        run: |
          echo y | buildozer -v android debug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: built-apk-${{ github.ref_name }}
          path: bin/*.apk